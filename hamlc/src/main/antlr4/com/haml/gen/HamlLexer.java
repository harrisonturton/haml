// Generated from /Users/harryturton/Documents/projects/haml/hamlc/src/main/antlr4/com/haml/HamlLexer.g4 by ANTLR 4.10.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class HamlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		OPEN_BRACE=1, CLOSE_BRACE=2, OPEN_PAREN=3, CLOSE_PAREN=4, OPEN_BRACKET=5, 
		CLOSE_BRACKET=6, FORWARD_SLASH=7, STAR=8, EQ=9, QUESTION=10, SEMICOLON=11, 
		COLON=12, STRUCT=13, RULE=14, SPEC=15, STRING=16, ENUM=17, COMMA=18, IMPORT=19, 
		FROM=20, TYPE=21, INTERFACE=22, IDENTIFIER=23, KEYWORD=24, WS=25, BLOCK_COMMENT=26, 
		START_SLASH_COMMENT=27, SLASH_COMMENT=28;
	public static final int
		SlashComment=1;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "SlashComment"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACKET", 
			"CLOSE_BRACKET", "FORWARD_SLASH", "STAR", "EQ", "QUESTION", "SEMICOLON", 
			"COLON", "STRUCT", "RULE", "SPEC", "STRING", "ENUM", "COMMA", "IMPORT", 
			"FROM", "TYPE", "INTERFACE", "IDENTIFIER", "KEYWORD", "WS", "BLOCK_COMMENT", 
			"START_SLASH_COMMENT", "SLASH_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'}'", "'('", "')'", "'['", "']'", "'/'", "'*'", "'='", 
			"'?'", "';'", "':'", "'struct'", "'rule'", "'spec'", null, "'enum'", 
			"','", "'import'", "'from'", null, "'interface'", null, null, null, null, 
			"'//'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACKET", 
			"CLOSE_BRACKET", "FORWARD_SLASH", "STAR", "EQ", "QUESTION", "SEMICOLON", 
			"COLON", "STRUCT", "RULE", "SPEC", "STRING", "ENUM", "COMMA", "IMPORT", 
			"FROM", "TYPE", "INTERFACE", "IDENTIFIER", "KEYWORD", "WS", "BLOCK_COMMENT", 
			"START_SLASH_COMMENT", "SLASH_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public HamlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "HamlLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001c\u00c9\u0006\uffff\uffff\u0006\uffff\uffff\u0002\u0000"+
		"\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003"+
		"\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006"+
		"\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002"+
		"\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002"+
		"\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002"+
		"\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002"+
		"\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002"+
		"\u0017\u0007\u0017\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002"+
		"\u001a\u0007\u001a\u0002\u001b\u0007\u001b\u0001\u0000\u0001\u0000\u0001"+
		"\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0005\u000ff\b"+
		"\u000f\n\u000f\f\u000fi\t\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0003"+
		"\u0014\u008c\b\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0004\u0016\u0099\b\u0016\u000b\u0016\f\u0016\u009a\u0001\u0017"+
		"\u0004\u0017\u009e\b\u0017\u000b\u0017\f\u0017\u009f\u0001\u0017\u0005"+
		"\u0017\u00a3\b\u0017\n\u0017\f\u0017\u00a6\t\u0017\u0001\u0018\u0004\u0018"+
		"\u00a9\b\u0018\u000b\u0018\f\u0018\u00aa\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0005\u0019\u00b3\b\u0019\n"+
		"\u0019\f\u0019\u00b6\t\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0004"+
		"\u001b\u00c1\b\u001b\u000b\u001b\f\u001b\u00c2\u0001\u001b\u0003\u001b"+
		"\u00c6\b\u001b\u0001\u001b\u0001\u001b\u0003g\u00b4\u00c2\u0000\u001c"+
		"\u0002\u0001\u0004\u0002\u0006\u0003\b\u0004\n\u0005\f\u0006\u000e\u0007"+
		"\u0010\b\u0012\t\u0014\n\u0016\u000b\u0018\f\u001a\r\u001c\u000e\u001e"+
		"\u000f \u0010\"\u0011$\u0012&\u0013(\u0014*\u0015,\u0016.\u00170\u0018"+
		"2\u00194\u001a6\u001b8\u001c\u0002\u0000\u0001\u0007\u0001\u0000\"\"\u0002"+
		"\u0000AZaz\u0001\u0000az\u0004\u000009AZ__az\u0003\u0000\t\n\r\r  \u0001"+
		"\u0000\n\n\u0001\u0001\n\n\u00cf\u0000\u0002\u0001\u0000\u0000\u0000\u0000"+
		"\u0004\u0001\u0000\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000"+
		"\b\u0001\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000\f\u0001"+
		"\u0000\u0000\u0000\u0000\u000e\u0001\u0000\u0000\u0000\u0000\u0010\u0001"+
		"\u0000\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0000\u0000\u0014\u0001"+
		"\u0000\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0000\u0000\u0018\u0001"+
		"\u0000\u0000\u0000\u0000\u001a\u0001\u0000\u0000\u0000\u0000\u001c\u0001"+
		"\u0000\u0000\u0000\u0000\u001e\u0001\u0000\u0000\u0000\u0000 \u0001\u0000"+
		"\u0000\u0000\u0000\"\u0001\u0000\u0000\u0000\u0000$\u0001\u0000\u0000"+
		"\u0000\u0000&\u0001\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000\u0000"+
		"*\u0001\u0000\u0000\u0000\u0000,\u0001\u0000\u0000\u0000\u0000.\u0001"+
		"\u0000\u0000\u0000\u00000\u0001\u0000\u0000\u0000\u00002\u0001\u0000\u0000"+
		"\u0000\u00004\u0001\u0000\u0000\u0000\u00006\u0001\u0000\u0000\u0000\u0001"+
		"8\u0001\u0000\u0000\u0000\u0002:\u0001\u0000\u0000\u0000\u0004<\u0001"+
		"\u0000\u0000\u0000\u0006>\u0001\u0000\u0000\u0000\b@\u0001\u0000\u0000"+
		"\u0000\nB\u0001\u0000\u0000\u0000\fD\u0001\u0000\u0000\u0000\u000eF\u0001"+
		"\u0000\u0000\u0000\u0010H\u0001\u0000\u0000\u0000\u0012J\u0001\u0000\u0000"+
		"\u0000\u0014L\u0001\u0000\u0000\u0000\u0016N\u0001\u0000\u0000\u0000\u0018"+
		"P\u0001\u0000\u0000\u0000\u001aR\u0001\u0000\u0000\u0000\u001cY\u0001"+
		"\u0000\u0000\u0000\u001e^\u0001\u0000\u0000\u0000 c\u0001\u0000\u0000"+
		"\u0000\"l\u0001\u0000\u0000\u0000$q\u0001\u0000\u0000\u0000&s\u0001\u0000"+
		"\u0000\u0000(z\u0001\u0000\u0000\u0000*\u008b\u0001\u0000\u0000\u0000"+
		",\u008d\u0001\u0000\u0000\u0000.\u0098\u0001\u0000\u0000\u00000\u009d"+
		"\u0001\u0000\u0000\u00002\u00a8\u0001\u0000\u0000\u00004\u00ae\u0001\u0000"+
		"\u0000\u00006\u00ba\u0001\u0000\u0000\u00008\u00c0\u0001\u0000\u0000\u0000"+
		":;\u0005{\u0000\u0000;\u0003\u0001\u0000\u0000\u0000<=\u0005}\u0000\u0000"+
		"=\u0005\u0001\u0000\u0000\u0000>?\u0005(\u0000\u0000?\u0007\u0001\u0000"+
		"\u0000\u0000@A\u0005)\u0000\u0000A\t\u0001\u0000\u0000\u0000BC\u0005["+
		"\u0000\u0000C\u000b\u0001\u0000\u0000\u0000DE\u0005]\u0000\u0000E\r\u0001"+
		"\u0000\u0000\u0000FG\u0005/\u0000\u0000G\u000f\u0001\u0000\u0000\u0000"+
		"HI\u0005*\u0000\u0000I\u0011\u0001\u0000\u0000\u0000JK\u0005=\u0000\u0000"+
		"K\u0013\u0001\u0000\u0000\u0000LM\u0005?\u0000\u0000M\u0015\u0001\u0000"+
		"\u0000\u0000NO\u0005;\u0000\u0000O\u0017\u0001\u0000\u0000\u0000PQ\u0005"+
		":\u0000\u0000Q\u0019\u0001\u0000\u0000\u0000RS\u0005s\u0000\u0000ST\u0005"+
		"t\u0000\u0000TU\u0005r\u0000\u0000UV\u0005u\u0000\u0000VW\u0005c\u0000"+
		"\u0000WX\u0005t\u0000\u0000X\u001b\u0001\u0000\u0000\u0000YZ\u0005r\u0000"+
		"\u0000Z[\u0005u\u0000\u0000[\\\u0005l\u0000\u0000\\]\u0005e\u0000\u0000"+
		"]\u001d\u0001\u0000\u0000\u0000^_\u0005s\u0000\u0000_`\u0005p\u0000\u0000"+
		"`a\u0005e\u0000\u0000ab\u0005c\u0000\u0000b\u001f\u0001\u0000\u0000\u0000"+
		"cg\u0005\"\u0000\u0000df\b\u0000\u0000\u0000ed\u0001\u0000\u0000\u0000"+
		"fi\u0001\u0000\u0000\u0000gh\u0001\u0000\u0000\u0000ge\u0001\u0000\u0000"+
		"\u0000hj\u0001\u0000\u0000\u0000ig\u0001\u0000\u0000\u0000jk\u0005\"\u0000"+
		"\u0000k!\u0001\u0000\u0000\u0000lm\u0005e\u0000\u0000mn\u0005n\u0000\u0000"+
		"no\u0005u\u0000\u0000op\u0005m\u0000\u0000p#\u0001\u0000\u0000\u0000q"+
		"r\u0005,\u0000\u0000r%\u0001\u0000\u0000\u0000st\u0005i\u0000\u0000tu"+
		"\u0005m\u0000\u0000uv\u0005p\u0000\u0000vw\u0005o\u0000\u0000wx\u0005"+
		"r\u0000\u0000xy\u0005t\u0000\u0000y\'\u0001\u0000\u0000\u0000z{\u0005"+
		"f\u0000\u0000{|\u0005r\u0000\u0000|}\u0005o\u0000\u0000}~\u0005m\u0000"+
		"\u0000~)\u0001\u0000\u0000\u0000\u007f\u0080\u0005s\u0000\u0000\u0080"+
		"\u0081\u0005t\u0000\u0000\u0081\u0082\u0005r\u0000\u0000\u0082\u0083\u0005"+
		"i\u0000\u0000\u0083\u0084\u0005n\u0000\u0000\u0084\u008c\u0005g\u0000"+
		"\u0000\u0085\u0086\u0005n\u0000\u0000\u0086\u0087\u0005u\u0000\u0000\u0087"+
		"\u0088\u0005m\u0000\u0000\u0088\u0089\u0005b\u0000\u0000\u0089\u008a\u0005"+
		"e\u0000\u0000\u008a\u008c\u0005r\u0000\u0000\u008b\u007f\u0001\u0000\u0000"+
		"\u0000\u008b\u0085\u0001\u0000\u0000\u0000\u008c+\u0001\u0000\u0000\u0000"+
		"\u008d\u008e\u0005i\u0000\u0000\u008e\u008f\u0005n\u0000\u0000\u008f\u0090"+
		"\u0005t\u0000\u0000\u0090\u0091\u0005e\u0000\u0000\u0091\u0092\u0005r"+
		"\u0000\u0000\u0092\u0093\u0005f\u0000\u0000\u0093\u0094\u0005a\u0000\u0000"+
		"\u0094\u0095\u0005c\u0000\u0000\u0095\u0096\u0005e\u0000\u0000\u0096-"+
		"\u0001\u0000\u0000\u0000\u0097\u0099\u0007\u0001\u0000\u0000\u0098\u0097"+
		"\u0001\u0000\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u009a\u0098"+
		"\u0001\u0000\u0000\u0000\u009a\u009b\u0001\u0000\u0000\u0000\u009b/\u0001"+
		"\u0000\u0000\u0000\u009c\u009e\u0007\u0002\u0000\u0000\u009d\u009c\u0001"+
		"\u0000\u0000\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u009d\u0001"+
		"\u0000\u0000\u0000\u009f\u00a0\u0001\u0000\u0000\u0000\u00a0\u00a4\u0001"+
		"\u0000\u0000\u0000\u00a1\u00a3\u0007\u0003\u0000\u0000\u00a2\u00a1\u0001"+
		"\u0000\u0000\u0000\u00a3\u00a6\u0001\u0000\u0000\u0000\u00a4\u00a2\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a5\u0001\u0000\u0000\u0000\u00a51\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a4\u0001\u0000\u0000\u0000\u00a7\u00a9\u0007\u0004"+
		"\u0000\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001\u0000"+
		"\u0000\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000"+
		"\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac\u00ad\u0006\u0018"+
		"\u0000\u0000\u00ad3\u0001\u0000\u0000\u0000\u00ae\u00af\u0005/\u0000\u0000"+
		"\u00af\u00b0\u0005*\u0000\u0000\u00b0\u00b4\u0001\u0000\u0000\u0000\u00b1"+
		"\u00b3\t\u0000\u0000\u0000\u00b2\u00b1\u0001\u0000\u0000\u0000\u00b3\u00b6"+
		"\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000\u00b4\u00b2"+
		"\u0001\u0000\u0000\u0000\u00b5\u00b7\u0001\u0000\u0000\u0000\u00b6\u00b4"+
		"\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005*\u0000\u0000\u00b8\u00b9\u0005"+
		"/\u0000\u0000\u00b95\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005/\u0000"+
		"\u0000\u00bb\u00bc\u0005/\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000"+
		"\u00bd\u00be\u0006\u001a\u0001\u0000\u00be7\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c1\b\u0005\u0000\u0000\u00c0\u00bf\u0001\u0000\u0000\u0000\u00c1\u00c2"+
		"\u0001\u0000\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c2\u00c0"+
		"\u0001\u0000\u0000\u0000\u00c3\u00c5\u0001\u0000\u0000\u0000\u00c4\u00c6"+
		"\u0007\u0006\u0000\u0000\u00c5\u00c4\u0001\u0000\u0000\u0000\u00c6\u00c7"+
		"\u0001\u0000\u0000\u0000\u00c7\u00c8\u0006\u001b\u0002\u0000\u00c89\u0001"+
		"\u0000\u0000\u0000\u000b\u0000\u0001g\u008b\u009a\u009f\u00a4\u00aa\u00b4"+
		"\u00c2\u00c5\u0003\u0006\u0000\u0000\u0005\u0001\u0000\u0004\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}